{"ast":null,"code":"var _jsxFileName = \"/Users/fiona/Desktop/testing/react/part1/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Notes = () => {};\n\n_c = Notes;\n\nconst App = _ref => {\n  let {\n    notes\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: notes[0].content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: notes[1].content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: notes[2].content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: note.content\n      }, note.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = App;\nexport default App;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Notes\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["Notes","App","notes","content","map","note","id"],"sources":["/Users/fiona/Desktop/testing/react/part1/src/App.js"],"sourcesContent":["const Notes = () =>{\n  \n}\n\nconst App = ({ notes }) => {\n  return (\n    <div>\n      <h1>Notes</h1>\n     \n      <ul>\n        <li>{notes[0].content}</li>\n        <li>{notes[1].content}</li>\n        <li>{notes[2].content}</li>\n      </ul>\n\n      <ul>\n        {notes.map((note) => \n        <li key = {note.id}>\n          {note.content}\n        </li>)}\n      </ul>\n\n     \n    </div>\n  )\n}\n\nexport default App"],"mappings":";;;AAAA,MAAMA,KAAK,GAAG,MAAK,CAElB,CAFD;;KAAMA,K;;AAIN,MAAMC,GAAG,GAAG,QAAe;EAAA,IAAd;IAAEC;EAAF,CAAc;EACzB,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAGE;MAAA,wBACE;QAAA,UAAKA,KAAK,CAAC,CAAD,CAAL,CAASC;MAAd;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,UAAKD,KAAK,CAAC,CAAD,CAAL,CAASC;MAAd;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAA,UAAKD,KAAK,CAAC,CAAD,CAAL,CAASC;MAAd;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAHF,eASE;MAAA,UACGD,KAAK,CAACE,GAAN,CAAWC,IAAD,iBACX;QAAA,UACGA,IAAI,CAACF;MADR,GAAWE,IAAI,CAACC,EAAhB;QAAA;QAAA;QAAA;MAAA,QADC;IADH;MAAA;MAAA;MAAA;IAAA,QATF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAoBD,CArBD;;MAAML,G;AAuBN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}